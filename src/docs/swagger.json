{
  "swagger": "2.0",
  "info": {
    "description": "AURORAL node interface - developed by bAvenir. The REST API is divided in two main groups; the API (Calls that use the Gateway to contact the AURORAL platform) and the ADMIN (calls oriented to monitor and make use to the agent resources)",
    "version": "1.0.0",
    "title": "Auroral agent",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "",
  "externalDocs": {
    "description": "Find out more about AURORAL",
    "url": "https://www.auroral.eu"
  },
  "tags": [
    {
      "name": "auth",
      "description": "API - Manual login of local infrastructure into AURORAL"
    },
    {
      "name": "registry",
      "description": "API - Manual registration of new devices or services into AURORAL"
    },
    {
      "name": "discovery",
      "description": "API - Discover the remote objects visible by your object"
    },
    {
      "name": "consumption",
      "description": "API - Resource consumption calls, request properties or publish events among others"
    },
    {
      "name": "admin",
      "description": "ADMIN - Monitor and manage the registrations and interactions that your adapter is using"
    },
    {
      "name": "import/export",
      "description": "ADMIN - Load/Save From/To file the information persisted by your adapter in memory"
    },
    {
      "name": "healthcheck",
      "description": "ADMIN - Test connection status of the adapter components (Server, Gateway and Storage)"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/admin/healthcheck": {
      "get": {
        "description": "See status of the adapter main components",
        "tags": ["healthcheck"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponseObject"
            }
          }
        }
      }
    },
    "/admin/exports": {
      "get": {
        "description": "Save registrations and interactions to file. BackUp option",
        "tags": ["import/export"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/imports": {
      "get": {
        "description": "Get into adapter registrations and interactions from file. Restore option",
        "tags": ["import/export"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/registrations": {
      "get": {
        "description": "Retrieve all the IDs of objects registered with your adapter and stored locally. Response list of OIDs.",
        "tags": ["admin"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayOfStrings"
            }
          }
        }
      }
    },
    "/admin/registrations/{id}": {
      "get": {
        "description": "Obtain the information of a concrete registered item by providing the ID as parameter.",
        "tags": ["admin"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Object id - OID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponseObject"
            }
          }
        }
      }
    },
    "/admin/registrations/td/{id}": {
      "get": {
        "description": "Obtain the TD concrete registered item by providing the ID as parameter",
        "tags": ["admin"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Object id - OID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponseObject"
            }
          }
        }
      }
    },
    "/admin/registrations/contracts/{id}": {
      "get": {
        "description": "Contract info stored locally. Retrieve the items that you are sharing with a given organisation.",
        "tags": ["admin"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Organisation id - CID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiJsonObject"
            }
          }
        }
      },
      "delete": {
        "description": "Remove locally stored contract data (DEVELOPMENT USAGE).",
        "tags": ["admin"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Organisation id - CID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiStringResponse"
            }
          },
          "202": {
            "description": "ACCEPTED, NOT PROCESSED",
            "schema": {
              "$ref": "#/definitions/ApiStringResponse"
            }
          }
        }
      }
    },
    "/admin/configuration": {
      "get": {
        "description": "Configuration status of the adapter",
        "tags": ["admin"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponseObject"
            }
          }
        }
      }
    },
    "/api/properties/{id}/{oid}/{pid}": {
      "get": {
        "description": "Request to get a remote property.",
        "tags": ["consumption"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          },
          {
            "in": "path",
            "name": "oid",
            "required": true,
            "description": "REMOTE Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          },
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "description": "Property of the remote object - PID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - formats: JSON, Turtle, plaintext ",
            "schema": {
              "$ref": "#/definitions/ApiJsonObject"
            }
          }
        }
      },
      "put": {
        "description": "Request the update of a remote property",
        "tags": ["consumption"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          },
          {
            "in": "path",
            "name": "oid",
            "required": true,
            "description": "REMOTE Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          },
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "description": "Property of the remote object - PID",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update property",
            "type": "object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiJsonObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiJsonObject"
            }
          }
        }
      }
    },
    "/api/login/{id}": {
      "get": {
        "description": "Login your gateway instance or any object registered with it (Providing its id)",
        "tags": ["auth"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/logout/{id}": {
      "get": {
        "description": "Logout your gateway instance or any object registered with it (Providing its id)",
        "tags": ["auth"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/api/registration": {
      "post": {
        "description": "Register an object in the AURORAL platform. If WoT is enabled you have to use thing description format.",
        "tags": ["registry"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Registration info",
            "type": "object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bodyRegistry"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegistrationSuccesArray"
            }
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "get": {
        "description": "See what objects has your gateway registered in the platform. Response list of OIDs.",
        "tags": ["registry"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayOfStrings"
            }
          }
        }
      },
      "put": {
        "description": "Update registered items",
        "tags": ["registry"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update details",
            "type": "object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bodyItemUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateResponseArray"
            }
          }
        }
      }
    },
    "/api/registration/remove": {
      "post": {
        "description": "UnRegister an object from the AURORAL platform",
        "tags": ["registry"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of OIDs that have to be removed from the platform",
            "type": "object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bodyUnRegistry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Not removed"
          }
        }
      }
    },
    "/api/partners": {
      "get": {
        "description": "Displays all partners that are in friendship with our organisation. Response list of CIDs.",
        "tags": ["discovery"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayOfStrings"
            }
          }
        }
      }
    },
    "/api/partners/{cid}": {
      "get": {
        "description": "Get info about my partners organisation",
        "tags": ["discovery"],
        "parameters": [
          {
            "in": "path",
            "name": "cid",
            "description": "Partners organisation CID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnersResponseObject"
            }
          }
        }
      }
    },
    "/api/discovery": {
      "get": {
        "description": "See what remote objects can you reach with your Gateway. You will see other gateways of your organisation or partnered organisations. Response list of OIDs.",
        "tags": ["discovery"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayOfStrings" 
            }
          }
        }
      }
    },
    "/api/discovery/{id}": {
      "get": {
        "description": "See what remote objects can you reach which each OID. To see objects of other organisations you need to agree on a contract for exchanging data. Get what your gateway can see by not providing oid parameter. Response list of OIDs.",
        "tags": ["discovery"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayOfStrings" 
            }
          }
        }
      },
      "post": {
        "description": "Remote discovery. Get thing descriptions of remote infrastructures that your gateway can see. Response list of things descriptions.",
        "tags": ["discovery"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          },
          {
            "in": "body",
            "name": "body",
            "description": "SPARQL query: Filter out specific content that you wish to see. I.E: Get me only thermometers",
            "required": false,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/SparqlRequestObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayOfJsons"
            }
          }
        }
      }
    },
    "/api/discovery/{id}/{originId}": {
      "post": {
        "description": "Remote discovery. Get thing descriptions of remote objects that some of your objects can see. Set the id of the object with the OID parameter and set the object initiating the request with originID. Response list of things descriptions.",
        "tags": ["discovery"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          },
          {
            "in": "path",
            "name": "originId",
            "description": "Object id - OID",
            "type": "string",
            "default": "0000-0000-0000"
          },
          {
            "in": "body",
            "name": "body",
            "description": "SPARQL query: Filter out specific content that you wish to see. I.E: Get me only thermometers",
            "type": "object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SparqlRequestObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiJsonObject"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "default": false
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ApiResponseArray": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "default": false
        },
        "message": {
          "type": "array",
          "description": "Array of oid's.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApiResponseErrorJson": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "ApiJsonObject": {
      "type": "object"
    },
    "ApiStringResponse": {
      "type": "string"
    },
    "ApiResponseObject": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "default": false
        },
        "message": {
          "type": "object"
        }
      }
    },
    "ArrayOfStrings": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ArrayOfJsons": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "RegistrationSuccesArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RegistrationSuccesObject"
      }
    },
    "RegistrationSuccesObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UpdateResponseArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UpdateResponseObject"
      }
    },
    "UpdateResponseObject": {
      "type": "object",
      "properties": {
        "oid": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        }
      }
    },
    "PartnersResponseObject": {
      "type": "array",
      "description": "Array of partners.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Organisation name"
          },
          "nodes": {
            "type": "array",
            "description": "Array of nodes.",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "bodyRegistry": {
      "properties": {
        "name": {
          "description": "Human readable name for the object",
          "type": "string",
          "required": true,
          "default": "MySmartSensor"
        },
        "type": {
          "description": "AURORAL type to assign for the object",
          "type": "string",
          "required": true,
          "default": "Device"
        },
        "adapterId": {
          "type": "string",
          "description": "Id of the object in your infrastructure",
          "required": true,
          "default": "1234"
        },
        "properties": {
          "type": "array",
          "description": "Array of pid's. You can use only those you previously registered in the adapter",
          "items": {
            "type": "string"
          }
        },
        "events": {
          "type": "array",
          "description": "Array of eid's. You can use only those you previously registered in the adapter",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "description": "Array of aid's. You can use only those you previously registered in the adapter",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string",
          "description": "Version of the registered device if applicable"
        },
        "description": {
          "type": "string",
          "description": "Additional info"
        }
      }
    },
    "bodyItemUpdate": {
      "properties": {
        "oid": {
          "description": "Object ID",
          "type": "string",
          "required": true,
          "default": "<oid>"
        },
        "name": {
          "description": "new item name",
          "type": "string",
          "required": false,
          "default": ""
        },
        "adapterId": {
          "type": "string",
          "description": "Id of the object in your infrastructure",
          "required": false,
          "default": "1234"
        },
        "properties": {
          "type": "array",
          "description": "Array of pid's. You can use only those you previously registered in the adapter",
          "items": {
            "type": "string"
          }
        },
        "events": {
          "type": "array",
          "description": "Array of eid's. You can use only those you previously registered in the adapter",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "description": "Array of aid's. You can use only those you previously registered in the adapter",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string",
          "description": "Version of the registered device if applicable"
        },
        "description": {
          "type": "string",
          "description": "Additional info"
        }
      }
    },
    "bodyUnRegistry": {
      "type": "object",
      "properties": {
        "oids": {
          "type": "array",
          "description": "OIDs of those objects you would like to unregister",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SparqlResponseObject": {
      "type": "object"
    },
    "SparqlRequestObject": {
      "properties": {
        "sparql": {
          "description": "Sparql query",
          "type": "string",
          "required": false,
          "default": ""
        }
      }
    }
  }
}
